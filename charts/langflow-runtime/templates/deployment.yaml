apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "langflow-runtime.fullname" . }}
  labels:
    {{- include "langflow-runtime.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "langflow-runtime.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "langflow-runtime.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "langflow-runtime.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/bin/bash", "-c"]
          args:
            - >
              set -e &&
              mkdir -p {{ .Values.downloadFlows.path }} &&
              {{- range .Values.downloadFlows.flows }}
              {{- $targetFile := printf "%s/%s.json" $.Values.downloadFlows.path (.uuid | default (.url | sha256sum | trunc 8)) -}}
              echo "Downloading flows from {{ .url }} to {{ $targetFile }}" &&
              curl --fail -o '{{ $targetFile }}' \
                {{- if .basicAuth }}
                -u "{{ .basicAuth }}" \
                {{- end }}
                {{- if .headers }}
                {{- range $key, $value := .headers }}
                -H "{{ $key }}: {{ $value }}" \
                {{- end }}
                {{- end }}
                '{{ .url }}' && 
              {{- if .endpoint }}
              python -c 'import json, sys;f = sys.argv[1]; data = json.load(open(f));data["endpoint_name"]="{{ .endpoint }}";json.dump(data, open(f, "w"))' '{{ $targetFile }}' &&
              {{- end }}
              {{- end }}
              echo 'Flows downloaded' && 
              langflow run --backend-only --host 0.0.0.0 --port {{ .Values.service.port }}
          env:
            - name: LANGFLOW_LOAD_FLOWS_PATH
              value: "{{ .Values.downloadFlows.path }}"
            {{- toYaml .Values.env | nindent 12 }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
